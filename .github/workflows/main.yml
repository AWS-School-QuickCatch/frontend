name: quickcatch-frontend-ci

on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_TOKEN }}

    - name: Get latest Docker image version
      id: get-latest-version
      run: |
        LATEST_TAG=$(curl -s https://hub.docker.com/v2/repositories/minho7336/qkc-app-fro/tags?page_size=1 | jq -r '.results[0].name')
        if [ -z "$LATEST_TAG" ]; then
          echo "No existing tags found. Setting latest tag to 0.0.0"
          LATEST_TAG="0.0.0"
        fi
        echo "Latest tag: $LATEST_TAG"
        echo "::set-output name=latest-tag::$LATEST_TAG"

    - name: Increment version
      id: increment-version
      run: |
        LATEST_TAG=${{ steps.get-latest-version.outputs.latest-tag }}
        MAJOR=$(echo $LATEST_TAG | cut -d. -f1)
        MINOR=$(echo $LATEST_TAG | cut -d. -f2)
        PATCH=$(echo $LATEST_TAG | cut -d. -f3)
        if [ -z "$PATCH" ]; then
          PATCH=0
        fi
        NEW_PATCH=$((PATCH + 1))
        NEW_TAG="$MAJOR.$MINOR.$NEW_PATCH"
        if [ "$LATEST_TAG" = "0.0.0" ]; then
          NEW_TAG="1.0.0"
        fi
        echo "New tag: $NEW_TAG"
        echo "::set-output name=new-tag::$NEW_TAG"

    - name: Build Docker image
      run: docker build . -t minho7336/qkc-app-fro:${{ steps.increment-version.outputs.new-tag }}

    - name: Push Docker image
      run: docker push minho7336/qkc-app-fro:${{ steps.increment-version.outputs.new-tag }}
